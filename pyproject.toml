[build-system]
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.module]
name = "ci_cd"

[project]
name = "ci-cd"
authors = [
    {name = "Casper Welzel Andersen", email = "casper.w.andersen@sintef.no"},
]
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Private :: Do Not Upload",
]
keywords = ["ci", "cd", "pre-commit"]
requires-python = "~=3.8"
dynamic = ["version", "description"]

dependencies = [
    "invoke ~=2.2",
    "packaging ~=25.0",
    "tomlkit ~=0.13.3",
    "typing-extensions ~=4.13",
]

[project.optional-dependencies]
docs = [
    "mike ~=2.1",
    "mkdocs ~=1.6",
    "mkdocs-awesome-pages-plugin ~=2.9",
    "mkdocs-material ~=9.6",
    "mkdocstrings[python-legacy] ~=0.26.1",
]
testing = [
    "pytest ~=8.3",
    "pytest-cov ~=5.0",
]
dev = [
    "pre-commit ~=3.5",
    "ci-cd[docs,testing]",
]

[project.urls]
Home = "https://github.com/SINTEF/ci-cd"
Documentation = "https://SINTEF.github.io/ci-cd"
Source = "https://github.com/SINTEF/ci-cd"
"Issue Tracker" = "https://github.com/SINTEF/ci-cd/issues"
Changelog = "https://SINTEF.github.io/ci-cd/latest/CHANGELOG"

[project.scripts]
"ci-cd" = "ci_cd.main:program.run"

[tool.mypy]
python_version = "3.8"
ignore_missing_imports = true
scripts_are_modules = true
warn_unused_configs = true
show_error_codes = true
allow_redefinition = true
check_untyped_defs = true

[tool.pytest.ini_options]
minversion = "8.3"
addopts = ["-rs", "--cov=ci_cd", "--cov-report=term-missing:skip-covered"]
filterwarnings = ["error"]

[tool.ruff.lint]
extend-select = [
    "E",  # pycodestyle
    "F",  # Pyflakes
    "B",  # flake8-bugbear
    "I",  # isort
    "BLE",  # flake8-blind-except
    "ARG",  # flake8-unused-arguments
    "C4",  # flake8-comprehensions
    "ICN",  # flake8-import-conventions
    "G",  # flake8-logging-format
    "PGH",  # pygrep-hooks
    "PIE",  # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PTH",  # flake8-use-pathlib
    "RET",  # flake8-return
    "RUF",  # Ruff-specific
    "SIM",  # flake8-simplify
    "YTT",  # flake8-2020
    "EXE",  # flake8-executable
    "PYI",  # flake8-pyi
]
ignore = [
    "PLC",  # Convention related pylint codes
    "PLR",  # Refactor related pylint codes
    "PLW0127",  # pylint: Self-assignment of variables
]

# Import __future__.annotations for all Python files.
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "BLE",  # flake8-blind-except
]
".github/**" = [
    "BLE",  # flake8-blind-except
]
